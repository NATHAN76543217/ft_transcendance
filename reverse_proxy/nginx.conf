# Server listening on	:80 and :443
# Redirecting from		:80				->	https://
# Reverse proxy from	/				->	frontend
# Reverse proxy from	/sockjs-node	->	frontend/sockjs-node
# Reverse proxy from	/pgadmin		->	pgadmin/
# Reverse proxy from	/api			->	backend/

events {

}

http {
	server {
		listen	443			ssl;
		listen	[::]:443	ssl;

		ssl_certificate		/etc/nginx/certs/tls.crt;
		ssl_certificate_key	/etc/nginx/certs/tls.key;
		ssl_protocols		TLSv1.1	TLSv1.2	TLSv1.3;

		# pgadmin
		location	/pgadmin {
			return	302		/pgadmin/;
		}

		location	/pgadmin/ {
			proxy_set_header	Host			$host;

			proxy_set_header	X-Script-Name	/pgadmin;

			proxy_pass			http://pgadmin/;
			proxy_redirect		off;
		}

		# api
		location	/api {
			return	302			/api/;
		}

		location	/api/ {
			proxy_set_header	host			$host;

			proxy_pass			http://backend:8080/;
		}

		location	/api/socket.io {
			proxy_set_header	Upgrade			$http_upgrade;
			proxy_set_header	Connection		'upgrade';
			proxy_set_header	Host			$host;
			proxy_cache_bypass	$http_upgrade;

			proxy_pass			http://backend:8080/socket.io;
		}

		# frontend
		location	/ {
			proxy_set_header	Host			$host;

			proxy_pass			http://frontend:3000;
		}

		location	/sockjs-node {
			proxy_http_version	1.1;
			proxy_set_header	Upgrade			$http_upgrade;
			proxy_set_header	Connection		'upgrade';
			proxy_set_header	Host			$host;
			proxy_cache_bypass	$http_upgrade;

			proxy_pass			http://frontend:3000/sockjs-node;
		}
	}

	server {
		listen	80		default_server;
		listen	[::]:80	default_server;

		return	301		https://$host$request_uri;
	}
}
