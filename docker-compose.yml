version: '3.7'

services:
    db:
        # build: ./database/postgres
        # image: pong_db_img
        image: postgres:13
        container_name: pong_db_cnt
        expose:
            - "5432"
        networks: 
            - pong_database_network
        restart: always
        volumes:
            - pg_data:/var/lib/postgresql/data
        env_file:
            - ./database/postgres/postgres.env

    pgadmin:
        depends_on: 
            - db
        # build: ./database/pgadmin
        # image: pong_pgadmin_img
        image: dpage/pgadmin4
        container_name: pong_pgadmin_cnt
        restart: always
        expose:
            - "80"
        networks:
            - pong_database_network
        env_file:
            - ./database/pgadmin/pgadmin.env

    backend:
        depends_on: 
            - db
        build: ./backend
        image: pong_back_img
        container_name: pong_back_cnt
        expose:
            - "8080"
        volumes:
            - /app/node_modules
            - /app/dist
            - './backend/srcs:/app'
        restart: always
        networks: 
            - pong_database_network
            - pong_backend_network

    frontend:
        depends_on:
            - backend
        build: ./frontend
        image: pong_front_img
        container_name: pong_front_cnt
        expose:
            - "3000"
        volumes:
            - /app/node_modules
            - ./frontend/srcs/:/app/
        networks:
            - pong_frontend_network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
            interval: 1m
            timeout: 10s
            retries: 3
            start_period: 40s

    reverse_proxy:
        depends_on:
            - pgadmin
            - frontend
            - backend
        build: ./reverse_proxy
        image: pong_reverse_proxy_img
        container_name: pong_reverse_proxy_cnt
        volumes:
            - ./reverse_proxy/nginx.conf:/etc/nginx/nginx.conf
            - ./reverse_proxy/certs/:/etc/nginx/certs/
        ports:
            - 80:80
            - 443:443
        networks:
            - pong_database_network
            - pong_frontend_network
            - pong_backend_network

networks: 
    pong_database_network : {}
    pong_frontend_network : {}
    pong_backend_network : {}

volumes:
    pg_data: 
